name: CICD

on:
  push:
    branches: [ master ]
    paths-ignore:
      - README.md
      - LICENSE
      - .gitignore
      - .editorconfig
      - deployment/**
  pull_request:
    branches: [ master ]
    paths-ignore:
      - README.md
      - LICENSE
      - .gitignore
      - .editorconfig
      - deployment/**

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ^1.16
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Install golangci-lint
        run: |
          go get github.com/golangci/golangci-lint/cmd/golangci-lint
      - name: Run linters
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          go mod download
          golangci-lint run

  build:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v1
        with:
          go-version: ^1.16
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Get dependencies
        run: |
          export GO111MODULE=on
          go get -v -t -d ./...
      - name: Build
        run: |
          export GO111MODULE=on
          go mod download
          GOOS=linux GOARCH=amd64 go build -o bin/prestrafe-gsi main.go

  test:
    needs: lint
    strategy:
      matrix:
        go-version: [ 1.16.x ]
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Run tests
        run: go test -v -norace ./...

  publish-image:
    if: github.ref == 'refs/heads/master'
    needs:
      - build
      - test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: jangraefen/prestrafe-gsi
          tags: |
            type=sha
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub docker registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: |
            linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true

  deploy-image:
    if: github.ref == 'refs/heads/master'
    needs:
      - publish-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v1
      - name: Setup kustomizew
        uses: imranismail/setup-kustomize@v1
      - name: Update image version
        run: |
          cd deployment
          kustomize edit set image prestrafe-gsi=jangraefen/prestrafe-gsi:${GITHUB_SHA::6}
      - name: Commit and push image version
        uses: actions-js/push@master
        with:
          author_name: Github Action Deployment
          author_email: gitops@prestrafe.com
          message: "Deploy revision ${{ github.sha }} via kustomize"
          github_token: "${{ secrets.GITHUB_TOKEN }}"
