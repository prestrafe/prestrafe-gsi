stages:
  - test
  - build
  - deploy

go-test:
  image: golang:alpine
  stage: test
  script:
    - export CGO_ENABLED=0
    - export GOOS=linux
    - export GOARCH=amd64
    - go mod download
    - go test -short $(go list ./... | grep -v /vendor/)
  except:
    changes:
      - deployment/**/*

image-build:
  image: docker:latest
  stage: build
  needs:
    - job: go-test
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" .
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  only:
    - master
  except:
    changes:
      - deployment/**/*

image-deploy:
  image:
    name: alpine:latest
  stage: deploy
  needs:
    - job: image-build
  before_script:
    - apk add --no-cache git openssh-client curl bash

    - mkdir -p ~/.ssh
    - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts

    - git config user.name "$GITLAB_USER_NAME"
    - git config user.email "$GITLAB_USER_EMAIL"
    - git remote set-url origin https://oauth2:${PIPELINE_ACCESS_TOKEN}@gitlab.com/${CI_PROJECT_PATH}.git
  script:
    - curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | bash

    - cd deployment
    - ../kustomize edit set image prestrafe-gsi=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - rm ../kustomize
    - cd ..

    - git add deployment/kustomization.yaml
    - git commit -m "Deploy revision $CI_COMMIT_SHORT_SHA via kustomize"
    - git push origin HEAD:$CI_COMMIT_REF_NAME
  except:
    changes:
      - deployment/**/*
