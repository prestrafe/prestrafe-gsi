stages:
  - lint
  - test
  - deploy

go-lint:
  image: golang:alpine
  stage: lint
  before_script:
    - export CGO_ENABLED=0
    - export GOOS=linux GOARCH=amd64
    - export PATH=$PATH:$GOPATH/bin
    - export GOBIN=$GOPATH/bin
    - go get golang.org/x/lint
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 golint -set_exit_status

go-test:
  image: golang:alpine
  stage: test
  script:
    - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go test -short

docker-deploy:
  image: docker:latest
  stage: deploy
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
  only:
    - master
